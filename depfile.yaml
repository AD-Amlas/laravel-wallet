paths:
  - ./src

layers:
  - name: Legacy
    collectors:
      - type: className
        regex: ^Bavix\\.*Legacy$

  - name: UI
    collectors:
      - type: className
        regex: ^Bavix\\.*\\Traits\\.*

  # internal
  - name: Dto
    collectors:
      - type: className
        regex: ^Bavix\\.*\\Internal\\Dto\\.*Dto$

  - name: DtoInterface
    collectors:
      - type: className
        regex: ^Bavix\\.*\\Internal\\Dto\\.*DtoInterface$

  - name: AssemblerDto
    collectors:
      - type: className
        regex: ^Bavix\\.*\\Internal\\Assembler\\.*DtoAssembler$

  - name: AssemblerDtoInterface
    collectors:
      - type: className
        regex: ^Bavix\\.*\\Internal\\Assembler\\.*DtoAssemblerInterface$

  - name: RepositoryInterface
    collectors:
      - type: className
        regex: ^Bavix\\.*Internal\\Repository\\.*RepositoryInterface$

  - name: Repository
    collectors:
      - type: className
        regex: ^Bavix\\.*Internal\\Repository\\.*Repository$

  - name: Transform
    collectors:
      - type: className
        regex: ^Bavix\\.*Internal\\Transform\\.*DtoTransformer$

  - name: TransformInterface
    collectors:
      - type: className
        regex: ^Bavix\\.*Internal\\Transform\\.*DtoTransformerInterface$

  - name: Infra
    collectors:
      - type: className
        regex: ^Bavix\\.*Internal\\Service\\.*Service$

  # contracts
  - name: Contracts
    collectors:
      - type: className
        regex: ^Bavix\\.*\\Interfaces\\.*

  - name: Model
    collectors:
      - type: className
        regex: ^Bavix\\.*\\Models\\Transaction$
      - type: className
        regex: ^Bavix\\.*\\Models\\Transfer$
      - type: className
        regex: ^Bavix\\.*\\Models\\Wallet$

  - name: ModelInterface
    collectors:
      - type: className
        regex: ^Bavix\\.*\\Models\\.*Interface$

  - name: Service
    collectors:
      - type: className
        regex: ^Bavix\\.*Services\\.*Service$

  - name: ServiceInterface
    collectors:
      - type: className
        regex: ^Bavix\\.*Service\\.*ServiceInterface$
      - type: className
        regex: ^Bavix\\.*Services\\.*ServiceInterface$

  # framework
  - name: ModelNotFoundException
    collectors:
      - type: className
        regex: ^Illuminate\\Database\\Eloquent\\ModelNotFoundException$

  - name: EloquentModel
    collectors:
      - type: className
        regex: ^Illuminate\\Database\\Eloquent\\Model$

  - name: Config
    collectors:
      - type: className
        regex: ^Illuminate\\Config\\Repository$

  - name: Cache
    collectors:
      - type: className
        regex: ^Illuminate\\Contracts\\Cache\\Repository$

ruleset:
  UI:
    - AssemblerDtoInterface # delete as soon as possible
    - ModelNotFoundException
    - ServiceInterface
    - ModelInterface
    - EloquentModel # drop it...
    - Contracts
    - Legacy # delete as soon as possible

  Contracts:
    - ModelInterface
    - DtoInterface

  Infra:
    - ServiceInterface
    - Config
    - Cache

  DtoInterface:
    - Contracts
  Dto:
    - DtoInterface
    - Contracts

  TransformInterface:
    - DtoInterface
  Transform:
    - TransformInterface
    - ServiceInterface
    - DtoInterface

  RepositoryInterface:
    - DtoInterface
    - ModelInterface
  Repository:
    - RepositoryInterface
    - TransformInterface
    - DtoInterface
    - ModelInterface

  ModelInterface:
    - Contracts
  Model:
    - AssemblerDtoInterface
    - ServiceInterface
    - ModelInterface
    - EloquentModel
    - Contracts
    - Legacy # drop it...
    - UI # drop it...

  ServiceInterface:
    - EloquentModel
    - DtoInterface
    - ModelInterface
    - Contracts
  Service:
    - AssemblerDtoInterface
    - RepositoryInterface
    - ServiceInterface
    - EloquentModel
    - DtoInterface
    - Contracts
    - ModelInterface # drop it?

  AssemblerDtoInterface:
    - EloquentModel
    - DtoInterface
    - Contracts
  AssemblerDto:
    - AssemblerDtoInterface
    - ServiceInterface
    - EloquentModel
    - Contracts
    - DtoInterface
    - Dto

  Legacy:
    - AssemblerDtoInterface
    - ServiceInterface
    - DtoInterface
    - ModelInterface
    - EloquentModel
    - Contracts
